/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { Chainrunner, ChainrunnerInterface } from "../Chainrunner";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    stateMutability: "payable",
    type: "fallback",
  },
  {
    inputs: [
      {
        internalType: "address[]",
        name: "route",
        type: "address[]",
      },
    ],
    name: "GetMetaData",
    outputs: [
      {
        internalType: "bytes32[]",
        name: "MetaData",
        type: "bytes32[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "AmountIn",
        type: "uint256",
      },
      {
        internalType: "bytes32[]",
        name: "MetaDataEncrypted",
        type: "bytes32[]",
      },
      {
        internalType: "uint8",
        name: "Chi",
        type: "uint8",
      },
      {
        internalType: "uint8",
        name: "VerifyFlag",
        type: "uint8",
      },
    ],
    name: "_swapSupportingFeesV4",
    outputs: [
      {
        internalType: "uint256",
        name: "AmountOut",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "GasUsed",
        type: "uint256",
      },
    ],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amountIn",
        type: "uint256",
      },
      {
        internalType: "bytes32[]",
        name: "MetaDataEncrypted",
        type: "bytes32[]",
      },
      {
        internalType: "uint8",
        name: "VerifyFlag",
        type: "uint8",
      },
    ],
    name: "getAmountOutV4",
    outputs: [
      {
        internalType: "bytes32[]",
        name: "Out",
        type: "bytes32[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_o",
        type: "address",
      },
    ],
    name: "setOwner",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b50336000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550611068806100606000396000f3fe6080604052600436106100435760003560e01c806313af40351461004c578063376ee89514610075578063a928ba1e146100a6578063e865f640146100e35761004a565b3661004a57005b005b34801561005857600080fd5b50610073600480360381019061006e9190610a68565b610120565b005b61008f600480360381019061008a9190610c93565b6101bb565b60405161009d929190610d25565b60405180910390f35b3480156100b257600080fd5b506100cd60048036038101906100c89190610e11565b6105f5565b6040516100da9190610f18565b60405180910390f35b3480156100ef57600080fd5b5061010a60048036038101906101059190610f3a565b6107ef565b6040516101179190610f18565b60405180910390f35b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461017857600080fd5b806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b60008060008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461021657600080fd5b60006102238787866107ef565b9050610278565b7f08c379a0000000000000000000000000000000000000000000000000000000006000527c200000000000000000000000000000000000000000000000000000000060205280604052816000fd5b6040518793506020820160106020890151036040890173ffffffffffffffffffffffffffffffffffffffff6010825103167f23b872dd0000000000000000000000000000000000000000000000000000000085523360048601528060248601528b60448601526000806064876000875af16102f2573d6000fd5b7c11696e76616c696420300000000000000000000000000000000000000060208c510260208403015b80841015610587577f0ffff0000000000000000000000000000000000000000000000000000000000084511660ec1c73ffffffffffffffffffffffffffffffffffffffff60108651031693507f70a0823100000000000000000000000000000000000000000000000000000000885283600489015260208860248a895afa6103a7573d6000803e3d6000fd5b6010602086015103955060007ff0000000000000000000000000000000000000000000000000000000000000008651161460018114610433578160208901518a5103029b506127106020890151028c0188518d02049b507f022c0d9f0000000000000000000000000000000000000000000000000000000089528b60048a0152600060248a015261047f565b8188518a5103029b506127108851028c0160208901518d02049b507f022c0d9f000000000000000000000000000000000000000000000000000000008952600060048a01528b60248a01525b506040820385106001811461049b57600081146104f05761055b565b73ffffffffffffffffffffffffffffffffffffffff60106040880151031660448a0152608060648a0152600060848a015260008060a48b600060108b51035af16104eb576104ea60558561022a565b5b61055b565b60018d141561052b578f8c101561052a57610529605a7c164d696e2072657475726e206e6f74207265616368656400000000000061022a565b5b5b3360448a0152608060648a0152600060848a015260008060a48b6000895af161055a5761055960558561022a565b5b5b50604087019650730100000000000000000000000000000000000000830192505060408401935061031b565b5060008b11156105e2577fd8ccd0f30000000000000000000000000000000000000000000000000000000086528a600487015260008060448860006d4946c0e9f43f4dee607b0ef1fa1c5af16105e1573d6000803e3d6000fd5b5b5a97505050505050505094509492505050565b6060600882516106059190610fd8565b67ffffffffffffffff81111561061e5761061d610ae1565b5b60405190808252806020026020018201604052801561064c5781602001602082028036833780820191505090505b509050604051825160208401602084016020830282015b808310156107e55782518083528060208401527f0dfe16810000000000000000000000000000000000000000000000000000000086526001602087600489855afa14156106b257855160208401525b8060408401527f313ce567000000000000000000000000000000000000000000000000000000008652600160208760048960208801515afa14156106f857855160408401525b8060608401527fd21220a70000000000000000000000000000000000000000000000000000000086526001602087600489855afa141561073a57855160608401525b8060808401527f313ce567000000000000000000000000000000000000000000000000000000008652600160208760048960608801515afa141561078057855160808401525b8060a48401528060c48401527f0902f1ac0000000000000000000000000000000000000000000000000000000086526001604087600489855afa14156107d257855160a4840152602086015160c48401525b6101008301925050602083019250610663565b5050505050919050565b6060825167ffffffffffffffff81111561080c5761080b610ae1565b5b60405190808252806020026020018201604052801561083a5781602001602082028036833780820191505090505b509050610890565b7f08c379a0000000000000000000000000000000000000000000000000000000006000527c200000000000000000000000000000000000000000000000000000000060205280604052816000fd5b604051602082016040850186602087510260208303015b808310156109ac577f0ffff0000000000000000000000000000000000000000000000000000000000083511660ec1c7f0902f1ac00000000000000000000000000000000000000000000000000000000865260408660048873ffffffffffffffffffffffffffffffffffffffff6010895103165afa61092a573d6000803e3d6000fd5b60007ff0000000000000000000000000000000000000000000000000000000000000008551161460018114610974576127106020880151028285020182850288510204935061098b565b612710875102828502018285026020890151020493505b508551855260208601516020860152604085019450506040830192506108a7565b5060018614156109e857878110156109e7576109e6605a7c164d696e2072657475726e206e6f742072656163686564000000000000610842565b5b5b808352505050509392505050565b6000604051905090565b600080fd5b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610a3582610a0a565b9050919050565b610a4581610a2a565b8114610a5057600080fd5b50565b600081359050610a6281610a3c565b92915050565b600060208284031215610a7e57610a7d610a00565b5b6000610a8c84828501610a53565b91505092915050565b6000819050919050565b610aa881610a95565b8114610ab357600080fd5b50565b600081359050610ac581610a9f565b92915050565b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b610b1982610ad0565b810181811067ffffffffffffffff82111715610b3857610b37610ae1565b5b80604052505050565b6000610b4b6109f6565b9050610b578282610b10565b919050565b600067ffffffffffffffff821115610b7757610b76610ae1565b5b602082029050602081019050919050565b600080fd5b6000819050919050565b610ba081610b8d565b8114610bab57600080fd5b50565b600081359050610bbd81610b97565b92915050565b6000610bd6610bd184610b5c565b610b41565b90508083825260208201905060208402830185811115610bf957610bf8610b88565b5b835b81811015610c225780610c0e8882610bae565b845260208401935050602081019050610bfb565b5050509392505050565b600082601f830112610c4157610c40610acb565b5b8135610c51848260208601610bc3565b91505092915050565b600060ff82169050919050565b610c7081610c5a565b8114610c7b57600080fd5b50565b600081359050610c8d81610c67565b92915050565b60008060008060808587031215610cad57610cac610a00565b5b6000610cbb87828801610ab6565b945050602085013567ffffffffffffffff811115610cdc57610cdb610a05565b5b610ce887828801610c2c565b9350506040610cf987828801610c7e565b9250506060610d0a87828801610c7e565b91505092959194509250565b610d1f81610a95565b82525050565b6000604082019050610d3a6000830185610d16565b610d476020830184610d16565b9392505050565b600067ffffffffffffffff821115610d6957610d68610ae1565b5b602082029050602081019050919050565b6000610d8d610d8884610d4e565b610b41565b90508083825260208201905060208402830185811115610db057610daf610b88565b5b835b81811015610dd95780610dc58882610a53565b845260208401935050602081019050610db2565b5050509392505050565b600082601f830112610df857610df7610acb565b5b8135610e08848260208601610d7a565b91505092915050565b600060208284031215610e2757610e26610a00565b5b600082013567ffffffffffffffff811115610e4557610e44610a05565b5b610e5184828501610de3565b91505092915050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b610e8f81610b8d565b82525050565b6000610ea18383610e86565b60208301905092915050565b6000602082019050919050565b6000610ec582610e5a565b610ecf8185610e65565b9350610eda83610e76565b8060005b83811015610f0b578151610ef28882610e95565b9750610efd83610ead565b925050600181019050610ede565b5085935050505092915050565b60006020820190508181036000830152610f328184610eba565b905092915050565b600080600060608486031215610f5357610f52610a00565b5b6000610f6186828701610ab6565b935050602084013567ffffffffffffffff811115610f8257610f81610a05565b5b610f8e86828701610c2c565b9250506040610f9f86828701610c7e565b9150509250925092565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000610fe382610a95565b9150610fee83610a95565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff048311821515161561102757611026610fa9565b5b82820290509291505056fea26469706673582212202c8b2505defdbbc83b4f1b153fada738143057b779e54a6515979a5871d2437e64736f6c634300080a0033";

export class Chainrunner__factory extends ContractFactory {
  constructor(
    ...args: [signer: Signer] | ConstructorParameters<typeof ContractFactory>
  ) {
    if (args.length === 1) {
      super(_abi, _bytecode, args[0]);
    } else {
      super(...args);
    }
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<Chainrunner> {
    return super.deploy(overrides || {}) as Promise<Chainrunner>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): Chainrunner {
    return super.attach(address) as Chainrunner;
  }
  connect(signer: Signer): Chainrunner__factory {
    return super.connect(signer) as Chainrunner__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ChainrunnerInterface {
    return new utils.Interface(_abi) as ChainrunnerInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): Chainrunner {
    return new Contract(address, _abi, signerOrProvider) as Chainrunner;
  }
}
